---
import type { BlogEntry } from "@/types";
import { getEntries } from "@lib/contentParser";
import { getTaxa } from "@lib/taxonomyParser";
import taxonomyFilter from "@lib/taxonomyFilter";
import TaxonLayout from "@components/blog/TaxonLayout.astro";
import { slugify } from "@lib/textConverter";

export async function getStaticPaths() {
  const taxa = await getTaxa("blog", "categories");
  const entriesPerPage = 6;
  const paths = [];

  for (const taxon of taxa) {
    const entries = await getEntries("blog") as BlogEntry[];
    const filteredEntries: BlogEntry[] = taxonomyFilter(entries, "categories", taxon);
    const pageCount = Math.ceil(filteredEntries.length / entriesPerPage);

    // Generate pagination routes for each category
    for (let i = 2; i <= pageCount; i++) {
      paths.push({
        params: {
          category: slugify(taxon),
          page: i.toString(),
        },
        props: { 
          taxon,
          currentPage: i,
        },
      });
    }
  }

  return paths;
}

const { taxon, currentPage } = Astro.props;
const entries = await getEntries("blog") as BlogEntry[];
const filteredEntries: BlogEntry[] = taxonomyFilter(entries, "categories", taxon!);
---

<TaxonLayout taxon={taxon} entries={filteredEntries} currentPage={currentPage} />
